% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_imod.R
\name{run_imod}
\alias{run_imod}
\title{run_imod.R}
\usage{
run_imod(code, constants, data, inits, monitors, nburnin = 3000, niter = 5000)
}
\arguments{
\item{code}{A NIMBLE model definition object (as returned by \code{nimbleCode()}).}

\item{constants}{A named list of model constants (e.g., number of sites, years).}

\item{data}{A named list of observed data for the model (e.g., detection/non-detection matrix).}

\item{inits}{A named list of initial values for latent states and parameters.}

\item{monitors}{A character vector naming the parameters to monitor in MCMC sampling.}

\item{nburnin}{Number of iterations for burn-in (default = 3000).}

\item{niter}{Total number of MCMC iterations (default = 5000).}
}
\value{
A list with two elements:
\describe{
\item{\code{mcmc_samples}}{An object of class \code{mcmc.list} containing posterior samples for the monitored parameters.}
\item{\code{waicInfo}}{WAIC statistics for model comparison and assessment.}
}
}
\description{
Run integrated occupancy-detection model using NIMBLE
}
\details{
Compiles and runs a Bayesian model using NIMBLE, based on a supplied model code object, constants,
data, initial values, and monitored parameters. Returns posterior samples and WAIC for model evaluation.

This function performs the following steps:
\enumerate{
\item Builds the NIMBLE model from the specified code, constants, data, and inits.
\item Constructs an MCMC object with the requested monitors and no conjugacy.
\item Compiles both the model and the MCMC.
\item Runs the MCMC sampler with 3 chains, specified burn-in, and total iterations.
\item Returns posterior samples as a \code{coda::mcmc.list}, with WAIC if enabled.
}

Any model build or run failure will stop with an informative error message.
}
\examples{
\dontrun{
results <- run_imod(code = my_model_code,
                    constants = model_constants,
                    data = model_data,
                    inits = model_inits,
                    monitors = c("beta0", "psi", "p"),
                    nburnin = 2000,
                    niter = 4000)
}

}
